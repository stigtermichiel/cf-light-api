#!/usr/bin/env ruby

$stdout.sync = true

puts '[cf_light_api] Starting CF Light API and worker...'

# If either of the minimum required New Relic settings are present, verify that they are both set, or exit with an error.
if ENV['NEW_RELIC_APP_NAME'] or ENV['NEW_RELIC_LICENSE_KEY']
  ['NEW_RELIC_APP_NAME', 'NEW_RELIC_LICENSE_KEY'].each do |env|
    unless ENV[env]
      puts "[cf_light_api] Error: please set the '#{env}' environment variable to enable New Relic integration."
      exit 1
    end
  end
end

require_relative '../lib/cf_light_api/worker.rb'
require_relative '../lib/cf_light_api/scheduler.rb'
require 'redis'

environment_checker = EnvironmentChecker.new
environment_checker.check_cf_env
graphite = environment_checker.check_graphite_env
environment_checker.check_redis_env

logger = Logger.new(STDOUT)
logger.formatter = proc do |_, datetime, progname, msg|
  "#{datetime} [cf_light_api:worker]: #{msg}\n"
end

redis = Redis.new(:uri => ENV['REDIS_URI'])
worker = CFLightAPIWorker.new(redis, graphite, Redlock::Client.new([redis]), logger)


Scheduler.new(Proc.new do |client|
  worker.update_cf_data(client)
end, Logger.new(STDOUT))


require 'sinatra'
require 'sinatra/cf_light_api'

set :traps, false
set :run, true
